name: Process Attendance

on:
  repository_dispatch:
    types: [attendance-scan]

permissions:
  contents: write
  issues: write
  actions: write

jobs:
  record-attendance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Record Attendance
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { qrData, timestamp, displayTime, source } = context.payload.client_payload;
          
          // Parse QR data first (before creating issue)
          let mobileNumber = '';
          let fullName = '';
          let service = '';
          
          try {
            // The QR data appears to be in Arabic JSON-like format
            const qrText = qrData || '';
            
            // Extract mobile number
            const mobileMatch = qrText.match(/رقم الموبايل["":]+"?([^"""}]+)/);
            if (mobileMatch) {
              mobileNumber = mobileMatch[1].replace(/[""]/g, '').trim();
            }
            
            // Extract full name
            const nameMatch = qrText.match(/الاسم رباعي["":]+"?([^"""}]+)/);
            if (nameMatch) {
              fullName = nameMatch[1].replace(/[""]/g, '').trim();
            }
            
            // Extract service
            const serviceMatch = qrText.match(/الخدمة["":]+"?([^"""}]+)/);
            if (serviceMatch) {
              service = serviceMatch[1].replace(/[""]/g, '').trim();
            }
          } catch (parseError) {
            console.log('Error parsing QR data:', parseError);
            // Fallback to original data
            mobileNumber = qrData;
          }

          // Create an issue for each attendance record
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `حضور: ${fullName || 'Unknown'} - ${displayTime}`,
            body: `
            ## 📋 سجل الحضور / Attendance Record
            
            - **👤 الاسم الكامل / Full Name**: ${fullName}
            - **📱 رقم الموبايل / Mobile**: ${mobileNumber}
            - **⛪ الخدمة / Service**: ${service}
            - **🕒 وقت الحضور / Time**: ${displayTime}
            - **📅 ISO Timestamp**: ${timestamp}
            - **🌐 Source**: ${source}
            - **✅ Recorded**: ${new Date().toISOString()}
            
            ---
            **Raw QR Data**: \`${qrData}\`
            `,
            labels: ['attendance', 'automated', service || 'unknown-service']
          });
          
          console.log('Attendance recorded:', issue.data.html_url);
          
          // Also append to a CSV file  
          const csvLine = `"${displayTime}","${mobileNumber}","${fullName}","${service}"\n`;
          
          try {
            // Try to get existing attendance.csv
            let content = '';
            try {
              const file = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'attendance.csv'
              });
              content = Buffer.from(file.data.content, 'base64').toString();
            } catch (e) {
              // File doesn't exist, create header
              content = '"Timestamp","Mobile Number","Full Name","Service"\n';
            }
            
            // Append new record
            const newContent = content + csvLine;
            
            // Update or create file
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'attendance.csv',
              message: `Add attendance record: ${qrData}`,
              content: Buffer.from(newContent).toString('base64'),
              sha: content !== '"Timestamp","QR Code Data","ISO Timestamp","Source"\n' ? 
                   (await github.rest.repos.getContent({
                     owner: context.repo.owner,
                     repo: context.repo.repo,
                     path: 'attendance.csv'
                   })).data.sha : undefined
            });
            
          } catch (error) {
            console.log('CSV update failed:', error.message);
          }
