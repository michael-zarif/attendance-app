name: Process Attendance

on:
  repository_dispatch:
    types: [attendance-scan]

permissions:
  contents: write
  issues: write
  actions: write

jobs:
  record-attendance:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Record Attendance
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { qrData, timestamp, displayTime, source } = context.payload.client_payload;
          
          console.log('Processing attendance record:', { qrData, displayTime, source });
          
          // Parse QR data to extract mobile, name, and service
          let mobileNumber = '';
          let fullName = '';
          let service = '';
          
          try {
            // The QR data appears to be in Arabic JSON-like format
            const qrText = qrData || '';
            
            // Extract mobile number
            const mobileMatch = qrText.match(/رقم الموبايل["":]+"?([^"""}]+)/);
            if (mobileMatch) {
              mobileNumber = mobileMatch[1].replace(/[""]/g, '').trim();
            }
            
            // Extract full name
            const nameMatch = qrText.match(/الاسم رباعي["":]+"?([^"""}]+)/);
            if (nameMatch) {
              fullName = nameMatch[1].replace(/[""]/g, '').trim();
            }
            
            // Extract service
            const serviceMatch = qrText.match(/الخدمة["":]+"?([^"""}]+)/);
            if (serviceMatch) {
              service = serviceMatch[1].replace(/[""]/g, '').trim();
            }
          } catch (parseError) {
            console.log('Error parsing QR data:', parseError);
            // Fallback to original data
            mobileNumber = qrData;
          }

          console.log('Parsed data:', { fullName, mobileNumber, service });
          
          // Create CSV line with proper UTF-8 encoding
          const csvLine = `"${displayTime}","${mobileNumber}","${fullName}","${service}"\n`;
          
          try {
            // Try to get existing attendance.csv
            let content = '';
            try {
              const file = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: 'attendance.csv'
              });
              content = Buffer.from(file.data.content, 'base64').toString();
            } catch (e) {
              // File doesn't exist, create header
            }
            
            // Append new record
            const newContent = content + csvLine;
            
            // Update or create file with proper UTF-8 encoding
            const updateResult = await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'attendance.csv',
              message: `Attendance: ${fullName || mobileNumber || 'Unknown'} - ${displayTime}`,
              content: Buffer.from(newContent, 'utf8').toString('base64'),
              sha: file ? file.data.sha : undefined
            });
            
            console.log(`Attendance recorded successfully for ${fullName}`);
            console.log(`CSV updated: ${updateResult.data.content.html_url}`);
            
          } catch (csvError) {
            console.error('Error updating CSV:', csvError);
            throw csvError;
          }
